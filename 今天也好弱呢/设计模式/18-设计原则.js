// 1.单一职责原则: 是指一个类(方法,对象)来说,应该仅有一个引起它变化的原因
// 也就是说,一个对象只做一件事
// 优点:
//  -降低单个类(方法,对象)的复杂度,提高可读性和可维护性,功能之间的界限更清晰
//  -类(方法,对象)之间根据功能被分为更小的粒度,有助于代码的复用

// 2.开放封闭原则: 是指一个模块在扩展性方面应该是开放的,而在更改性方面应该是封闭
// 的,也就是对扩展开放,对修改封闭
// 优点:
//  -增加可维护性,避免因修改给系统带来的不稳定性

// 3.最少知识原则: 一个对象应该对其他对象有最少的了解,通俗来讲,一个类应该对自己需要
// 耦合或调用的类知道得最少。类与类之间的关系越密切,耦合度越大,当一个类发生改变时,对
// 另一个类的影响也越大的
// 优点:
//  -降低类(方法,对象)之间不必要的依赖,减少耦合